---
title: "STAT 331 Portfolio"
author: "Eva Dykaar"
format: 
  html: 
    self-contained: true
layout: margin-left
editor: visual
execute: 
  eval: false
  echo: true
---

[**My Grade:**]{.underline} I believe my grade equivalent to course work evidenced below to be an \_\_.

[**Learning Objective Evidence:**]{.underline} In the code chunks below, provide code from a Lab or Challenge assignment where you believe you have demonstrated proficiency with the specified learning target. Be sure to specify **where** the code came from (e.g., Lab 4 Question 2).

## Working with Data

**WD-1: I can import data from a *variety* of formats (e.g., csv, xlsx, txt, etc.).**

-   `csv: Lab 2 Q1`

```{r wd-1-csv}

surveys <- read_csv(here("Week 2", "surveys.csv"))
```

-   `xlsx`

```{r wd-1-xlsx}

```

-   `txt`

```{r wd-1-txt}

```

**WD-2: I can select necessary columns from a dataset.**

Lab 3 Q9

```{r wd-2}

hiphop_clean |>
  distinct(subj, .keep_all = TRUE) |>
  select(sex, age, ethnic) |>
  summary()
```

**WD-3: I can filter rows from a dataframe for a *variety* of data types (e.g., numeric, integer, character, factor, date).**

-   numeric
-   Lab 3 Q11

```{r wd-3-numeric}

belowtwenty <- hiphop_clean |>
  filter(age < 20)|>
  mutate(familiarity = as.numeric(familiarity)) |>
  group_by(word) |>
  summarize(mean_familiarity = mean(familiarity))

belowtwenty |>
  slice_max(mean_familiarity)
  
belowtwenty |>
  slice_min(mean_familiarity)

```

-   character -- specifically a string

```{r wd-3-string}

```

-   factor
-   Lab 3 Q12

```{r wd-3-factor}

non_white_women <- hiphop_clean |>
  filter(ethnic == "Non-White" & sex == "Female")|>
  mutate(familiarity = as.numeric(familiarity))|>
  group_by(word) |>
  summarize(mean_familiarity = mean(familiarity))
```

-   date
-   Practice Act 5.1 Q3

```{r wd-3-date}

thanks <- ymd("2018-11-22")

time_frame <- (thanks - days(35)) %--% (thanks + days(35))

suspects <- suspects %>%
  filter(Time.Spotted %within% time_frame)
```

**WD-4: I can modify existing variables and create new variables in a dataframe for a *variety* of data types (e.g., numeric, integer, character, factor, date).**

-   numeric
-   Lab 4 Q6

```{r wd-4-numeric}


avocado_ca <- avocado_clean |>
  filter(region == c("LosAngeles",
                    "SanDiego",
                    "Sacramento",
                    "SanFrancisco")
         ) |>
  group_by(region, type) |>
  summarize(
    avg_price = mean(AveragePrice)
    ) |>
  pivot_wider(names_from = type, 
              values_from = avg_price) |>
  mutate(diff = organic - conventional)

avocado_ca |>
  summary()
```

-   character -- specifically a string

```{r wd-4-string}

```

-   factor
-   Lab 3 Q7

```{r wd-4-factor}

hiphop_clean <- hiphop_clean|>
  mutate(ethnic = case_when(ethnic == "white" ~ "white", 
                            TRUE ~ "non-white"), 
                            ethnic = as.factor(ethnic))
```

-   date
-   Practice Act 5.1 Q4

```{r wd-4-date}

suspects <- suspects %>%
  mutate(iceland_time = with_tz(Time.Spotted, tz = "Etc/Greenwich")) %>%
  filter(pm(iceland_time))
```

**WD-5: I can use mutating joins to combine multiple dataframes.**

-   `left_join()`

```{r wd-5-left}

```

-   `right_join()`
-   Preview Act 4.3

```{r wd-5-right}

right_join(prof_info, prof_course)
```

-   `inner_join()`

```{r wd-5-inner}

```

-   `full_join()`
-   Challenge 4

```{r wd-5-full}

avocado_ca2 <- avocado_clean |>
  filter(region == c("LosAngeles",
                    "SanDiego",
                    "Sacramento",
                    "SanFrancisco")) |>
  full_join(house_price, by = c("region", "year"))
```

**WD-6: I can use filtering joins to filter rows from a dataframe.**

-   `semi_join()`
-   Lab 4 Q2

```{r wd-6-semi}

avocado_regions <- avocado |>
  semi_join(regions, by = "region")
```

-   `anti_join()`
-   Lab 4 Q2

```{r wd-6-anti}

avocado_clean <- avocado |>
  anti_join(regions, by = "region") |>
  anti_join(states, by = "region") |>
  anti_join(total, by = "region")

```

**WD-7: I can pivot dataframes from long to wide and visa versa**

-   `pivot_longer()`
-   Lab 4 Q7

```{r wd-7-long}

avocado_ca2 <- avocado_clean |>
  filter(region == c("LosAngeles",
                    "SanDiego",
                    "Sacramento",
                    "SanFrancisco")) |>
  pivot_longer(cols = c(`Small/medium`, Large, Xlarge),
               names_to = "Size",
               values_to = "amount") |>
  group_by(region, Size, type) |>
  summarize(avg_amount = mean(amount)) |>
  group_by(region, type) |>
  mutate(total = sum(avg_amount)) |>
  mutate(prop = avg_amount/total)
```

-   `pivot_wider()`
-   Lab 4 Q6

```{r wd-7-wide}

avocado_ca <- avocado_clean |>
  filter(region == c("LosAngeles",
                    "SanDiego",
                    "Sacramento",
                    "SanFrancisco")
         ) |>
  group_by(region, type) |>
  summarize(
    avg_price = mean(AveragePrice)
    ) |>
  pivot_wider(names_from = type, 
              values_from = avg_price) |>
  mutate(diff = organic - conventional)
```

## Reproducibility

**R-1: I can create professional looking, reproducible analyses using RStudio projects, Quarto documents, and the here package.**

I've done this in the following provided assignments:

Lab 2, Lab, 3, Lab 4, Challenge 4

**R-2: I can write well documented and tidy code.**

-   Example 1

```{r r-2-1}


```

-   Example 2

```{r r-2-2}

```

**R-3: I can write robust programs that are resistant to changes in inputs.**

-   Example 1

```{r r-3-1}

```

-   Example 2

```{r r-3-2}

```

## Data Visualization & Summarization

**DVS-1: I can create visualizations for a *variety* of variable types (e.g., numeric, character, factor, date)**

-   numeric variables

```{r dvs-1-num}

```

-   numeric variables and categorical variables

```{r dvs-2-num-cat}

```

-   categorical variables

```{r dvs-2-cat}

```

-   dates

```{r dvs-2-date}

```

**DVS-2: I use plot modifications to make my visualization clear to the reader.**

-   Example 1

```{r dvs-2-1}

```

-   Example 2

```{r dvs-2-2}

```

**DVS-3: I show creativity in my visualizations**

-   Example 1

```{r dvs-3-1}

```

-   Example 2

```{r dvs-3-2}

```

**DVS-4: I can calculate numerical summaries of variables.**

-   Example 1

```{r dvs-4-1}

```

-   Example 2

```{r dvs-4-2}

```

**DVS-5: I can find summaries of variables across multiple groups.**

-   Example 1

```{r dvs-5-1}

```

-   Example 2

```{r dvs-5-2}

```

**DVS-6: I can create tables which make my summaries clear to the reader.**

-   Example 1

```{r dvs-6-1}

```

-   Example 2

```{r dvs-6-2}

```

**DVS-7: I show creativity in my tables.**

-   Example 1

```{r dvs-7-1}

```

-   Example 2

```{r dvs-7-2}

```

## Program Efficiency

**PE-1: I can write concise code which does not repeat itself.**

-   using a single function call

```{r pe-1-one-call}

```

-   `across()`

```{r pe-1-across}

```

-   `map()` functions

```{r pe-1-map-1}

```

**PE-2: I can write functions to reduce repetition in my code.**

-   Example 1

```{r pe2-1}

```

-   Example 2

```{r pe2-2}

```

**PE-3:I can use iteration to reduce repetition in my code.**

-   `across()`

```{r pe-3-across}

```

-   `map()` functions (Provide 2 Examples)

```{r pe-3-map-1}

```

```{r pe-3-map-2}

```

**PE-4: I can use modern tools when carrying out my analysis.**

-   Example 1

```{r pe-4-1}

```

-   Example 2

```{r pe-4-2}

```

## Data Simulation & Modeling

**DSM-1: I can simulate data from a *variety* of probability models.**

-   Example 1

```{r dsm-1-1}

```

-   Example 2

```{r dsm-1-2}

```

**DSM-2: I can fit a linear regression and extract necessary summary measures.**

-   Example 1

```{r dsm-2-1}

```

-   Example 2

```{r dsm-2-2}

```

## Revising My Thinking

<!-- How did you revise your thinking throughout the course? How did you revise your thinking on the code examples you have provided in your portfolio? -->

## Extending My Thinking

<!-- How did you extended your thinking throughout the course? How did you extend your thinking on the code examples you have provided in your portfolio? -->

## Peer Support & Collaboration

<!-- Include an image of feedback you gave that you are proud of (either in a peer review or in Discord) -->
